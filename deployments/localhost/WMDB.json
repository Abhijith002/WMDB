{
  "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "ValueChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveAll",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            }
          ],
          "internalType": "struct WMDB.web3mdb[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "retrieveOne",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "store",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x22e018a92e2e55aaddb7340807e99dec819b1be81b1bba6cfbeaddd1c25d44fa",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
    "transactionIndex": 0,
    "gasUsed": "518070",
    "logsBloom": "0x
    "blockHash": "0x27d3c9b82d1a4d345790ce5957089c2410e70dfdca393c24b2064f9230c6b5ca",
    "transactionHash": "0x22e018a92e2e55aaddb7340807e99dec819b1be81b1bba6cfbeaddd1c25d44fa",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 7,
        "transactionHash": "0x22e018a92e2e55aaddb7340807e99dec819b1be81b1bba6cfbeaddd1c25d44fa",
        "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x27d3c9b82d1a4d345790ce5957089c2410e70dfdca393c24b2064f9230c6b5ca"
      }
    ],
    "blockNumber": 7,
    "cumulativeGasUsed": "518070",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "db1908a5f538c4806b4bcc82ad39d5ac",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveAll\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"internalType\":\"struct WMDB.web3mdb[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"retrieveOne\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WMDB.sol\":\"WMDB\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/WMDB.sol\":{\"content\":\"// contracts/Box.sol\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract WMDB is Ownable {\\r\\n    uint256 private iterableId = 0;\\r\\n\\r\\n    struct web3mdb {\\r\\n        uint256 id;\\r\\n        string cid;\\r\\n    }\\r\\n\\r\\n    web3mdb[] private wmdb;\\r\\n\\r\\n    // Emitted when the stored value changes\\r\\n    event ValueChanged(string newValue);\\r\\n\\r\\n    // Stores a new value in the contract\\r\\n    function store(string memory newValue) public onlyOwner {\\r\\n        web3mdb memory newMovie = web3mdb({id: iterableId, cid: newValue});\\r\\n        wmdb.push(newMovie);\\r\\n        iterableId++;\\r\\n        emit ValueChanged(newValue);\\r\\n    }\\r\\n\\r\\n    // Retrieve all stored movies\\r\\n    function retrieveAll() public view returns (web3mdb[] memory) {\\r\\n        return wmdb;\\r\\n    }\\r\\n\\r\\n    // Retrieve specific movie by ID\\r\\n    function retrieveOne(uint256 id) public view returns (string memory) {\\r\\n        return wmdb[id].cid;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0ee103d7a2cae8555c53ba1d1f60085b475a15e5f1fe51df45ec79ae7fec4121\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107ea806100836000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063131a0680146100675780635d37dfe31461007c578063715018a6146100a55780638da5cb5b146100ad57806395607ced146100c8578063f2fde38b146100dd575b600080fd5b61007a61007536600461056c565b6100f0565b005b61008f61008a36600461061d565b6101d0565b60405161009c9190610683565b60405180910390f35b61007a610286565b6000546040516001600160a01b03909116815260200161009c565b6100d061029a565b60405161009c919061069d565b61007a6100eb366004610711565b610395565b6100f8610413565b6040805180820190915260018054825260208083018481526002805493840181556000819052845193027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace81019384559051805185949361017d937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf019201906104bd565b505060018054915060006101908361073a565b91905055507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d7826040516101c49190610683565b60405180910390a15050565b6060600282815481106101e5576101e5610763565b9060005260206000209060020201600101805461020190610779565b80601f016020809104026020016040519081016040528092919081815260200182805461022d90610779565b801561027a5780601f1061024f5761010080835404028352916020019161027a565b820191906000526020600020905b81548152906001019060200180831161025d57829003601f168201915b50505050509050919050565b61028e610413565b610298600061046d565b565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561038c5783829060005260206000209060020201604051806040016040529081600082015481526020016001820180546102fb90610779565b80601f016020809104026020016040519081016040528092919081815260200182805461032790610779565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b505050505081525050815260200190600101906102be565b50505050905090565b61039d610413565b6001600160a01b0381166104075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104108161046d565b50565b6000546001600160a01b031633146102985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546104c990610779565b90600052602060002090601f0160209004810192826104eb5760008555610531565b82601f1061050457805160ff1916838001178555610531565b82800160010185558215610531579182015b82811115610531578251825591602001919060010190610516565b5061053d929150610541565b5090565b5b8082111561053d5760008155600101610542565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561057e57600080fd5b813567ffffffffffffffff8082111561059657600080fd5b818401915084601f8301126105aa57600080fd5b8135818111156105bc576105bc610556565b604051601f8201601f19908116603f011681019083821181831017156105e4576105e4610556565b816040528281528760208487010111156105fd57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561062f57600080fd5b5035919050565b6000815180845260005b8181101561065c57602081850181015186830182015201610640565b8181111561066e576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006106966020830184610636565b9392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561070357888303603f190185528151805184528701518784018790526106f087850182610636565b95880195935050908601906001016106c4565b509098975050505050505050565b60006020828403121561072357600080fd5b81356001600160a01b038116811461069657600080fd5b600060001982141561075c57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061078d57607f821691505b602082108114156107ae57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220214a8eb5d790a223291981b489839932a7840bdd2dad6ce109771f2b16f2684b64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063131a0680146100675780635d37dfe31461007c578063715018a6146100a55780638da5cb5b146100ad57806395607ced146100c8578063f2fde38b146100dd575b600080fd5b61007a61007536600461056c565b6100f0565b005b61008f61008a36600461061d565b6101d0565b60405161009c9190610683565b60405180910390f35b61007a610286565b6000546040516001600160a01b03909116815260200161009c565b6100d061029a565b60405161009c919061069d565b61007a6100eb366004610711565b610395565b6100f8610413565b6040805180820190915260018054825260208083018481526002805493840181556000819052845193027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace81019384559051805185949361017d937f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf019201906104bd565b505060018054915060006101908361073a565b91905055507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d7826040516101c49190610683565b60405180910390a15050565b6060600282815481106101e5576101e5610763565b9060005260206000209060020201600101805461020190610779565b80601f016020809104026020016040519081016040528092919081815260200182805461022d90610779565b801561027a5780601f1061024f5761010080835404028352916020019161027a565b820191906000526020600020905b81548152906001019060200180831161025d57829003601f168201915b50505050509050919050565b61028e610413565b610298600061046d565b565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561038c5783829060005260206000209060020201604051806040016040529081600082015481526020016001820180546102fb90610779565b80601f016020809104026020016040519081016040528092919081815260200182805461032790610779565b80156103745780601f1061034957610100808354040283529160200191610374565b820191906000526020600020905b81548152906001019060200180831161035757829003601f168201915b505050505081525050815260200190600101906102be565b50505050905090565b61039d610413565b6001600160a01b0381166104075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104108161046d565b50565b6000546001600160a01b031633146102985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546104c990610779565b90600052602060002090601f0160209004810192826104eb5760008555610531565b82601f1061050457805160ff1916838001178555610531565b82800160010185558215610531579182015b82811115610531578251825591602001919060010190610516565b5061053d929150610541565b5090565b5b8082111561053d5760008155600101610542565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561057e57600080fd5b813567ffffffffffffffff8082111561059657600080fd5b818401915084601f8301126105aa57600080fd5b8135818111156105bc576105bc610556565b604051601f8201601f19908116603f011681019083821181831017156105e4576105e4610556565b816040528281528760208487010111156105fd57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561062f57600080fd5b5035919050565b6000815180845260005b8181101561065c57602081850181015186830182015201610640565b8181111561066e576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006106966020830184610636565b9392505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561070357888303603f190185528151805184528701518784018790526106f087850182610636565b95880195935050908601906001016106c4565b509098975050505050505050565b60006020828403121561072357600080fd5b81356001600160a01b038116811461069657600080fd5b600060001982141561075c57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061078d57607f821691505b602082108114156107ae57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220214a8eb5d790a223291981b489839932a7840bdd2dad6ce109771f2b16f2684b64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/WMDB.sol:WMDB",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9801,
        "contract": "contracts/WMDB.sol:WMDB",
        "label": "iterableId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 9810,
        "contract": "contracts/WMDB.sol:WMDB",
        "label": "wmdb",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(web3mdb)9806_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(web3mdb)9806_storage)dyn_storage": {
        "base": "t_struct(web3mdb)9806_storage",
        "encoding": "dynamic_array",
        "label": "struct WMDB.web3mdb[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(web3mdb)9806_storage": {
        "encoding": "inplace",
        "label": "struct WMDB.web3mdb",
        "members": [
          {
            "astId": 9803,
            "contract": "contracts/WMDB.sol:WMDB",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9805,
            "contract": "contracts/WMDB.sol:WMDB",
            "label": "cid",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}